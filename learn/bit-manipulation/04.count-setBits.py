# ---------------------------------------------------------------------------- #
#                                with while loop                               #
# ---------------------------------------------------------------------------- #
def countSetBits1(n):
    count = 0

    while n:
        if n % 2 != 0:
            count += 1
        n //= 2
    
    return count

# ---------------------------------------------------------------------------- #
#                                with & operator                               #
# ---------------------------------------------------------------------------- #

def countSetBits2(n):
    count = 0

    while n:
        if n & 1 == 1:
            count += 1
        n = n >> 1
    
    return count

# ---------------------------------------------------------------------------- #
#                            further simplification                            #
# ---------------------------------------------------------------------------- #

def countSetBits3(n):
    count = 0

    while n:
        count += n & 1 == 1
        n = n >> 1
    
    return count


# ---------------------------------------------------------------------------- #
#                          Brian Kernighanâ€™s algorithm                         #
# ---------------------------------------------------------------------------- #

def bkAlgorithm(n):
    count = 0

    while n:
        n &= (n - 1)
        count += 1
    
    return count


# ---------------------------------------------------------------------------- #
#                            Look up table approach                            #
# ---------------------------------------------------------------------------- #

def lookUpTableApproach(n):
    table = [None] * 256

    table[0] = 0

    for i in range(1,256):
        table[i] = (i & 1) + table[i >> 1]
    
    res = 0
    for i in range(4):
        res += table[n & 0xff]
        n = n >> 8
    
    return res





# ---------------------------------------------------------------------------- #
#                                   Execution                                  #
# ---------------------------------------------------------------------------- #
print(countSetBits1(125))
print(countSetBits2(125))
print(countSetBits3(125))
print(bkAlgorithm(125))
print(lookUpTableApproach(125))